<%- include('../layout', {body: `
<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <div class="text-center mb-4">
                    <div class="profile-image-container">
                        <img id="userProfileImage" src="/images/default-avatar.png" alt="Profile" class="profile-image-small">
                    </div>
                    <h6 id="userName" class="mt-2 mb-0">Loading...</h6>
                    <small id="userType" class="text-muted">Loading...</small>
                </div>
                
                <ul class="nav flex-column" id="sidebarNav">
                    <li class="nav-item">
                        <a class="nav-link active" href="#" data-section="overview">
                            <i class="fas fa-tachometer-alt me-2"></i>Overview
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2" id="pageTitle">Dashboard</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="refreshDashboard()">
                            <i class="fas fa-refresh me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>

            <!-- Alert Container -->
            <div id="alert-container"></div>

            <!-- Content Sections -->
            <div id="overview-section" class="content-section">
                <div class="row" id="statsCards">
                    <!-- Stats cards will be loaded here -->
                </div>

                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Recent Activity</h5>
                            </div>
                            <div class="card-body">
                                <div id="recentActivity">
                                    <div class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2">Loading recent activity...</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Dynamic sections will be loaded here -->
            <div id="dynamic-content"></div>
        </main>
    </div>
</div>

<style>
.sidebar {
    position: fixed;
    top: 56px;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    color: #333;
    border-radius: 0.375rem;
    margin: 0.125rem 0.5rem;
}

.sidebar .nav-link:hover {
    color: #0d6efd;
    background-color: rgba(13, 110, 253, 0.1);
}

.sidebar .nav-link.active {
    color: #fff;
    background-color: #0d6efd;
}

.content-section {
    display: none;
}

.content-section.active {
    display: block;
}

@media (max-width: 767.98px) {
    .sidebar {
        position: static;
        height: auto;
        padding: 1rem 0;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Check authentication
    if (!authManager.isAuthenticated()) {
        window.location.href = '/login';
        return;
    }

    initializeDashboard();
});

async function initializeDashboard() {
    try {
        // Load user data
        await loadUserData();
        
        // Load dashboard content based on user type
        if (authManager.isRestaurant()) {
            loadRestaurantDashboard();
        } else if (authManager.isInfluencer()) {
            loadInfluencerDashboard();
        }
        
        // Show overview section by default
        showSection('overview');
        
    } catch (error) {
        console.error('Dashboard initialization error:', error);
        showAlert('Failed to load dashboard data. Please refresh the page.', 'danger');
    }
}

async function loadUserData() {
    try {
        const response = await apiGet('/api/auth/me');
        const data = await response.json();
        
        if (response.ok) {
            const user = data.user;
            const profile = data.profile;
            
            // Update user info in sidebar
            document.getElementById('userName').textContent = 
                profile ? (profile.business_name || profile.display_name) : user.email.split('@')[0];
            document.getElementById('userType').textContent = 
                user.user_type === 'restaurant' ? 'Restaurant Owner' : 'Food Influencer';
            
            // Update profile image if available
            if (profile && profile.profile_image) {
                document.getElementById('userProfileImage').src = profile.profile_image;
            }
            
            // Check if profile is complete
            if (data.needsProfile) {
                showAlert('Please complete your profile to access all features.', 'warning');
                setTimeout(() => {
                    window.location.href = '/profile/create';
                }, 3000);
                return;
            }
            
        } else {
            throw new Error(data.error || 'Failed to load user data');
        }
    } catch (error) {
        console.error('Load user data error:', error);
        throw error;
    }
}

function loadRestaurantDashboard() {
    // Add restaurant-specific navigation
    const sidebar = document.getElementById('sidebarNav');
    sidebar.innerHTML += \`
        <li class="nav-item">
            <a class="nav-link" href="#" data-section="campaigns">
                <i class="fas fa-bullhorn me-2"></i>My Campaigns
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#" data-section="applications">
                <i class="fas fa-envelope me-2"></i>Applications
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#" data-section="commissions">
                <i class="fas fa-chart-line me-2"></i>Commissions
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/campaigns/create">
                <i class="fas fa-plus me-2"></i>Create Campaign
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/profile">
                <i class="fas fa-user-edit me-2"></i>Edit Profile
            </a>
        </li>
    \`;
    
    loadRestaurantStats();
}

function loadInfluencerDashboard() {
    // Add influencer-specific navigation
    const sidebar = document.getElementById('sidebarNav');
    sidebar.innerHTML += \`
        <li class="nav-item">
            <a class="nav-link" href="#" data-section="applications">
                <i class="fas fa-paper-plane me-2"></i>My Applications
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/campaigns">
                <i class="fas fa-search me-2"></i>Browse Campaigns
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/profile">
                <i class="fas fa-user-edit me-2"></i>Edit Profile
            </a>
        </li>
    \`;
    
    loadInfluencerStats();
}

async function loadRestaurantStats() {
    try {
        const [campaignsResponse, commissionsResponse] = await Promise.all([
            apiGet('/api/campaigns/my-campaigns'),
            apiGet('/api/commissions/stats')
        ]);
        
        const campaignsData = await campaignsResponse.json();
        const commissionsData = await commissionsResponse.json();
        
        const statsCards = document.getElementById('statsCards');
        statsCards.innerHTML = \`
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card primary border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Total Campaigns
                                </div>
                                <div class="stat-number text-gray-800">\${campaignsData.total || 0}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-bullhorn fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card success border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Active Campaigns
                                </div>
                                <div class="stat-number text-gray-800">\${campaignsData.campaigns ? campaignsData.campaigns.filter(c => c.status === 'active').length : 0}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card info border-left-info shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                    Total Commissions
                                </div>
                                <div class="stat-number text-gray-800">RM \${commissionsData.stats ? commissionsData.stats.total_amount.toFixed(2) : '0.00'}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card warning border-left-warning shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                    Pending Commissions
                                </div>
                                <div class="stat-number text-gray-800">RM \${commissionsData.stats ? commissionsData.stats.pending_amount.toFixed(2) : '0.00'}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-clock fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        \`;
        
    } catch (error) {
        console.error('Error loading restaurant stats:', error);
    }
}

async function loadInfluencerStats() {
    try {
        const response = await apiGet('/api/applications/my-applications');
        const data = await response.json();
        
        const applications = data.applications || [];
        const pendingCount = applications.filter(a => a.status === 'pending').length;
        const acceptedCount = applications.filter(a => a.status === 'accepted').length;
        const totalEarnings = applications
            .filter(a => a.status === 'accepted')
            .reduce((sum, a) => sum + (parseFloat(a.budget_per_influencer) || 0), 0);
        
        const statsCards = document.getElementById('statsCards');
        statsCards.innerHTML = \`
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card primary border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                    Total Applications
                                </div>
                                <div class="stat-number text-gray-800">\${applications.length}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-paper-plane fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card warning border-left-warning shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                    Pending Applications
                                </div>
                                <div class="stat-number text-gray-800">\${pendingCount}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-clock fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card success border-left-success shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                    Accepted Campaigns
                                </div>
                                <div class="stat-number text-gray-800">\${acceptedCount}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card stat-card info border-left-info shadow h-100 py-2">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                    Total Earnings
                                </div>
                                <div class="stat-number text-gray-800">RM \${totalEarnings.toFixed(2)}</div>
                            </div>
                            <div class="col-auto">
                                <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        \`;
        
    } catch (error) {
        console.error('Error loading influencer stats:', error);
    }
}

// Navigation handling
document.addEventListener('click', function(e) {
    if (e.target.matches('.nav-link[data-section]')) {
        e.preventDefault();
        const section = e.target.dataset.section;
        showSection(section);
        
        // Update active nav link
        document.querySelectorAll('.nav-link').forEach(link => link.classList.remove('active'));
        e.target.classList.add('active');
    }
});

function showSection(sectionName) {
    // Hide all sections
    document.querySelectorAll('.content-section').forEach(section => {
        section.classList.remove('active');
    });
    
    // Show requested section
    const section = document.getElementById(sectionName + '-section');
    if (section) {
        section.classList.add('active');
    }
    
    // Update page title
    const titles = {
        'overview': 'Dashboard Overview',
        'campaigns': 'My Campaigns',
        'applications': 'Applications',
        'commissions': 'Commission Tracking'
    };
    
    document.getElementById('pageTitle').textContent = titles[sectionName] || 'Dashboard';
}

function refreshDashboard() {
    location.reload();
}

function showAlert(message, type) {
    const alertContainer = document.getElementById('alert-container');
    alertContainer.innerHTML = \`
        <div class="alert alert-\${type} alert-dismissible fade show" role="alert">
            \${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    \`;
}
</script>
`}) %>